"""
    Copyright 2019 Continental Corporation

    :file: swt_report_generating_test.pytest
    :platform: Windows, Linux
    :synopsis:
        Sample test to check proper report generation. ConTest Release testing.

    :author:
        - Christopher Mirajkar <Christopher.Charles.Mirajkar@continental-corporation.com>
"""

# standard Python import area
from ptf.verify_utils import ptf_asserts
from contest_verify.verify import contest_expects
from ptf.ptf_utils.report import *
from ptf.ptf_utils.parameterized import parameterized


def SWT_SAMPLE_REPORT_GEN_TEST_PASSv1__each():
    DETAILS("This testcase is used for testing the report generation")

    VERIFIES("ASTT-968")

    AUTOMATES("ID_1")

    TESTTAG("report_generating_test")

    TESTSTEP("Generate report")
    EXPECTED("Report generated")
    print("Hello there!")

def SWT_SAMPLE_REPORT_GEN_TEST_FAILv1__each():
    DETAILS("This testcase is used for testing the report generation")

    VERIFIES("ASTT-968")

    AUTOMATES("ID_2")

    TESTTAG("report_generating_test")

    TESTSTEP("Generate report")
    EXPECTED("Report generated")
    ptf_asserts.fail()


def SWT_PTF_ASSERTS_FAIL_FOR_JUNIT_FAILUREv1():

    AUTOMATES("ID_3")
    ptf_asserts.verify(1, 2, "1 != 2 this is contest specific exception")


def SWT_PTF_EXPECTS_FAIL_FOR_JUNIT_ERRORv1():
    contest_expects.expect_eq(1, 2, "1 != 2 this is contest expects specific exception")

    AUTOMATES("ID_4")
    contest_expects.expect_eq(3, 4, "3 != 4 this is contest expects specific exception")


def SWT_GENERAL_FAIL_FOR_JUNIT_ERRORv1():
    raise RuntimeError("this is forced Runtimeerror via python")


@parameterized([
    [1, 2, 4], [2, 2, 5]
])
def SWT_PARAM_ADD_JUNIT_TESTv1(n1, n2, s):

    AUTOMATES("ID_5")
    if n1 == 2:
        raise RuntimeError(n1+n2, s, f"{n1} + {n2} != {s}")
    else:
        ptf_asserts.verify(n1+n2, s, f"{n1} + {n2} != {s}")
