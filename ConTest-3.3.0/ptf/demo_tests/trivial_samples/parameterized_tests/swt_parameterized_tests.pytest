
from ptf.ptf_utils.parameterized import parameterized
from contest_verify.verify import contest_asserts, contest_warn
from ptf.ptf_utils.decorator.prioritization import priority, Priority
from ptf.ptf_utils.report import DETAILS, PRECONDITION, VERIFIES, TESTTAG, TESTSTEP, EXPECTED, TESTCASE, AUTOMATES


@parameterized([])
def SWT_1_DEMO_TEST_PARAMETERIZED_single_parameter_only_default(text='ravi'):
    print("Text: {0}".format(text))
    DETAILS("Demo test to check Parameterized with single parameter only and default value")
    TESTCASE()
    PRECONDITION("Fill in precondition")

    VERIFIES("L3SW_xxxx_tuple")

    TESTTAG("1")
    TESTSTEP("Check the default params and values")


@parameterized(['hello', 'abc'
                ])
def SWT_2_DEMO_TEST_PARAMETERIZED_single_parameter_values_and_default(text='ravi'):
    print("Text: {0}".format(text))
    DETAILS("Demo test to check Parameterized with single parameter values and default")
    TESTCASE()
    PRECONDITION("Fill in precondition")

    VERIFIES("L3SW_xxxx_tuple")

    TESTTAG("2")
    TESTSTEP("Check the empty params and values")


@parameterized(['hello', 'abc'
                ])
def SWT_3_DEMO_TEST_PARAMETERIZED_multiple_parameter_no_default(text, text1):
    print("Text: {0}".format(text))
    DETAILS("Demo test to check Parameterized with multiple parameters")
    TESTCASE()
    PRECONDITION("Fill in precondition")

    VERIFIES("L3SW_xxxx_tuple")

    TESTTAG("3")
    TESTSTEP("Check the empty params and values")


@parameterized([("abc", "foo", 4, 7),
                ("abc", "foo", 2),
                ("abc", "foo", 6, 3, 2, False)])
def SWT_4_DEMO_TEST_PARAMETERIZED_empty_parameters():
    print("Text: {0}".format(text))
    DETAILS("Demo test to check Parameterized empty parameters")
    TESTCASE()
    PRECONDITION("Fill in precondition")

    VERIFIES("L3SW_xxxx_tuple")
    AUTOMATES("ID_123")

    TESTTAG("4")
    TESTSTEP("Check the empty params and values")


@parameterized([])
def SWT_5_DEMO_TEST_PARAMETERIZED_empty_parameters_and_values():
    print("Text: {0}".format(text))
    DETAILS("Demo test to check Parameterized empty params and values")
    TESTCASE()
    PRECONDITION("Fill in precondition")

    VERIFIES("L3SW_xxxx_tuple")

    TESTTAG("5")
    TESTSTEP("Check the empty params and values")


@parameterized([
    ("abc", "foo", 4, 7),
    ("abc", "foo", 2),
    ("abc", "foo", 6, 3, 2, False)
])
def SWT_6_DEMO_TEST_PARAMETERIZED_tuple_params_valid(text1, text2, number1, number=5, value=5,
                                                     tuple_flag=True):
    print("Number: {0}, Text: {1}".format(number1, text1))
    DETAILS("Demo test to check Parameterized tuple params with valid")
    TESTCASE()
    PRECONDITION("Fill in precondition")

    VERIFIES("L3SW_xxxx_tuple")
    AUTOMATES("ID_123")

    TESTTAG("6")
    TESTTAG("66")
    TESTSTEP("Check the tuple values")
    # This is intended to fail on second and third call
    contest_asserts.verify(number, 1, "Unexpected number")


@parameterized([
    (),
    ("bar", "abc"),
    (("abc", "Hello"), "foo", 4, 7),
    ("abc", "foo", 2),
    ("abc", "foo", 6, 3, 2, False)
])
def SWT_7_DEMO_TEST_PARAMETERIZED_tuple_params_valid_Invalid(text1, text2, number1, number=5,
                                                             value=5,
                                                             tuple_flag=True):
    print("Number: {0}, Text: {1}".format(number1, text1))
    DETAILS("Demo test to check Parameterized tuple params with valid and invalid")
    TESTCASE()
    PRECONDITION("Fill in precondition")

    VERIFIES("L3SW_xxxx_tuple")

    TESTTAG("7")
    TESTSTEP("Check the tuple values")
    # This is intended to fail on second and third call
    contest_asserts.verify(number, 1, "Unexpected number")


@parameterized([
    (),
    ("bar", "abc")
])
@priority(Priority.HIGH)  # This test is executed with high priority
def SWT_8_DEMO_TEST_PARAMETERIZED_tuple_params_Invalid(text1, text2, number1, number=5, value=2,
                                                       tuple_flag=True):
    print("Number: {0}, Text: {1}".format(number1, text1))
    DETAILS("Demo test to check Parameterized tuple params with invalid")
    TESTCASE()
    PRECONDITION("Fill in precondition")

    VERIFIES("L3SW_xxxx_tuple")

    TESTTAG("integration")
    TESTTAG("design-driven")
    TESTTAG("8")
    TESTSTEP("Check the tuple values")
    # This is intended to fail on second and third call
    contest_asserts.verify(number, 1, "Unexpected number")


@priority(Priority.HIGH)  # This test is executed with high priority
@parameterized([
    ("foo", 1),
    ("bar", 2),
    ("baz", 3)
], stop_on_first_failure=True)
def SWT_9_DEMO_TEST_PARAMETERIZED_tuple_params_fail_first(text='foo', number=2, flag=True):
    print("Number: {0}, Text: {1}".format(number, text))

    DETAILS(
        "Demo test to check Parameterized tuple params with fail first")
    TESTCASE()
    PRECONDITION("Fill in precondition")

    VERIFIES("L3SW_xxxx_tuple")

    TESTTAG("integration")
    TESTTAG("design-driven")
    TESTTAG("9")
    TESTSTEP("Check the tuple values")
    # This is intended to fail on second call
    contest_asserts.verify(number, 1, "Unexpected number")


@parameterized([
    ()
])
def SWT_10_DEMO_TEST_PARAMETERIZED_tuple_params_empty_values_with_default_prameters(number=5,
                                                                                    value=5,
                                                                                    tuple_flag=True):
    print("Number: {0}".format(number))
    DETAILS("Demo test to check Parameterized tuple params with empty values and default parameters")
    TESTCASE()
    PRECONDITION("Fill in precondition")

    VERIFIES("L3SW_xxxx_tuple")

    TESTTAG("10")
    TESTSTEP("Check the tuple values")
    # This is intended to fail on second and third call
    contest_asserts.verify(number, 5, "Unexpected number")


@parameterized([
    [],
    ["bar", "abc"],
    ["abc", ["abc", "Hello"], "ravi", 1],
    ["abc", "foo", "ravi"],
    ["abc", "foo", "ravi", 3, 2, False]
])
def SWT_11_DEMO_TEST_PARAMETERIZED_list_params_valid(text1, text2, number1, number2=5, value=5,
                                                     list_flag=True):
    print("Number: {0}, Text: {1}".format(number1, number2))
    DETAILS("Demo test to check Parameterized list of params are valid")
    TESTCASE()
    PRECONDITION("Fill in precondition")

    VERIFIES("L3SW_xxxx_list")

    TESTTAG("11")
    TESTSTEP("Check the list values")
    # This is intended to fail on second and third call
    contest_asserts.verify(number1, 1, "Unexpected number")


@parameterized([
    [],
    ["bar", "abc"]])
def SWT_12_DEMO_TEST_PARAMETERIZED_list_params_Invalid(text1, text2, number1, number2=5, value=5,
                                                       list_flag=True):
    print("Number: {0}, Text: {1}".format(number1, number2))
    DETAILS("Demo test to check Parameterized list of params are invalid")
    TESTCASE()
    PRECONDITION("Fill in precondition")

    VERIFIES("L3SW_xxxx_list")

    TESTTAG("12")
    TESTSTEP("Check the list values")
    # This is intended to fail on second and third call
    contest_asserts.verify(number1, 1, "Unexpected number")


@parameterized([
    [],
])
def SWT_13_DEMO_TEST_PARAMETERIZED_list_params_empty_values_default_parameters(number=5, value=5,
                                                                               tuple_flag=True):
    print("Number: {0}".format(number))
    DETAILS("Demo test to check Parameterized list of params with empty values and default "
            "parameters")
    TESTCASE()
    PRECONDITION("Fill in precondition")

    VERIFIES("L3SW_xxxx_list")

    TESTTAG("13")
    TESTSTEP("Check the list values")
    # This is intended to fail on second and third call
    contest_asserts.verify(number, 5, "Unexpected number")


@parameterized([
    ["foo", 1],
    ["bar", 2]
], print_full_parameters=True)
# Here we don't print out the current parameters in each iteration
def SWT_14_DEMO_TEST_PARAMETERIZED_array_params(text, number, list_flag=True):
    print("Number: {0}, Text: {1}".format(number, text))
    DETAILS("Demo test to check Parameterized arrays of params")
    TESTCASE()
    PRECONDITION("Fill in precondition")

    VERIFIES("L3SW_xxxx_array")

    TESTTAG("14")
    TESTTAG("sil")
    TESTSTEP("Check the array values")


@parameterized([
    {"text": "foo", "numb": 1},
    {"number": 2, "text": "bar"}
])
def SWT_15_DEMO_TEST_PARAMETERIZED_dict_params_incorrect_keys(text, number):
    print("Number: {0}, Text: {1}".format(number, text))
    DETAILS("Demo test to check Parameterized dictionary of params with incorrect keys")
    TESTCASE()
    PRECONDITION("Fill in precondition")

    VERIFIES("L3SW_xxxx_dict")

    TESTTAG("15")
    TESTTAG("sil")
    TESTSTEP("Check the dictionary keys and its values")


@parameterized([
    {"text": "foo", "number": 1},
    {"number": 2, "text": "bar"}
])
def SWT_16_DEMO_TEST_PARAMETERIZED_dict_params_correct_keys(text, number):
    print("Number: {0}, Text: {1}".format(number, text))
    DETAILS("Demo test to check Parameterized dict of params with correct keys")
    TESTCASE()
    PRECONDITION("Fill in precondition")

    VERIFIES("L3SW_xxxx_dict")

    TESTTAG("16")
    TESTTAG("sil")
    TESTSTEP("Check the dictionary keys and its values")


@parameterized([
    {"text": "foo", "number": 1},
    {"number": 2, "text": "bar"}
])
def SWT_17_DEMO_TEST_PARAMETERIZED_correct_keys_with_default_parameter(text, number, dic_flag=True):
    print("Number: {0}, Text: {1}".format(number, text))
    DETAILS("Demo test to check Parameterized dictionary with correct keys with default parameter")
    TESTCASE()
    PRECONDITION("Fill in precondition")

    VERIFIES("L3SW_xxxx_dict")

    TESTTAG("17")
    TESTTAG("hil")
    TESTSTEP("Check the dictionary keys and its values")


@parameterized([
    {"text": "foo", "number": 2, "value": 10, "dic_flag": False},
    {},
    {"text": "foo"}
])
def SWT_18_DEMO_TEST_PARAMETERIZED_dict_params_values_greater_and_less_than_non_default_params(
        text,
        number,
        dic_flag=True):
    print("Number: {0}, Text: {1}".format(number, text))
    DETAILS("Demo test to check Parameterized dict of params values are greater and less than non "
            "default params")
    TESTCASE()
    PRECONDITION("Fill in precondition")

    VERIFIES("L3SW_xxxx_dict")

    TESTTAG("18")
    TESTTAG("hil")
    TESTSTEP("Check the dictionary keys and its values")


@parameterized([{}])
def SWT_19_DEMO_TEST_PARAMETERIZED_dict_params_only_default_values(text='hello', number=10,
                                                                   dic_flag=True):
    print("Number: {0}, Text: {1}".format(number, text))
    DETAILS("Demo test to check Parameterized dict of params are only default values")
    TESTCASE()
    PRECONDITION("Fill in precondition")

    VERIFIES("L3SW_xxxx_dict")

    TESTTAG("19")
    TESTTAG("hil")
    TESTSTEP("Check the dictionary keys and its values")


@parameterized(
    [
        (1, 2, "1 != 2"),
        (2, 2, "2 != 2")
    ]
)
def SWT_ASSERT_WARN_PARAMv1(num_1, num_2, warn):
    DETAILS("Sample test case to show the usage of 'contest_warn.warn_if_eval_exp_failed' API")

    PRECONDITION("NA")

    VERIFIES("L3_SW_WARN_WITH_EVAL_EXP_PARAM")

    TESTTAG("warn_exp_param")

    TESTSTEP("Logging a custom warning if boolean evaluation expression failed")
    EXPECTED("Warning logged successfully")
    exp = "{} == {}".format(num_1, num_2)
    contest_warn.warn_if_eval_exp_failed(eval_exp=exp, warning_info=warn)



