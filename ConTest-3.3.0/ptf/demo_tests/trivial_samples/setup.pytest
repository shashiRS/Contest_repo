"""
    This file contains the (global_)setup and (global_)teardown methods.
    Copyright 2018 Continental Corporation

    This file contains up to four methods that will be called by the test framework:
        - global_setup(): Will be called before ALL testcases
        - setup(): Will be called before EACH testcase
        - teardown(): Will be called after EACH testcase. Will also be called if testcase fails.
        - global_teardown(): Will be called after ALL testcases.
                             Will be called if any execution before fails.

    :file: setup.pytest

    :author:
        - Felix Wohlfrom <felix.2.wohlfrom@continental-corporation.com>
"""


from ptf.ptf_utils.global_params import *

def global_setup():
    """
    This method will be called before ALL testcases are executed.
    You can set global variables with :func:`set_global_parameter`.
    Will skip execution of tests if this method fails.
    """

    print("This is executed before all tests")
    set_global_parameter("demo_value", True)  # We set it here globally for all tests
    set_reporting_parameter("Version", "Test Version")
    set_reporting_parameter("Type of test", "Trivial Sample Test")
    set_reporting_parameter("Modules", "Test Modules")
    set_global_parameter("num_1", 10)
    set_global_parameter("num_2", 5)

def global_teardown():
    """
    This method will be called after ALL testcases are executed.
    Guaranteed to be called, even if any test or global setup fails.
    """

    print("This is executed after all tests")
    print("Got the parameter " + str(get_parameter("demo_value")))
    print("Report parameter 'Version': " + str(get_parameter("Version")))
    print("Report Parameters:")
    for name, value in get_reporting_parameter().items():
        print("{:<18} {:<10}".format(name, value))
    print("Base path of the current test: ", get_cfg_paths("basePath"))
    print("Base Report path of the current test: ", get_cfg_paths("baseReport"))
    print("All paths of the current test: ")
    for name, value in get_cfg_paths().items():
        print("{:<18} {:<10}".format(name, str(value)))

def setup():
    """
    This method will be called before EACH testcase is executed.
    You can set global variables with :func:`set_global_parameter` and local variables just
    available for the next testcase using :func:`set_local_parameter`.
    Will skip execution of test if this method fails.
    Skipped if global setup fails.
    """

    print("This is executed before each test")
    set_local_parameter("another_value", True)  # Here we set it just for a single test
    set_local_parameter("local_flag", True)

def teardown():
    """
    This method will be called after EACH testcase is executed.
    Guaranteed to be called, even if the test or setup fails.
    Skipped if global setup fails.
    """

    print("This is executed after each test")
