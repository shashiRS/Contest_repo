"""
    Copyright 2019 Continental Corporation

    This file contains up to four methods that will be called by the test framework:
        - global_setup(): Will be called before ALL test-cases
        - setup(): Will be called before EACH test-case
        - teardown(): Will be called after EACH test-case. Will also be called if test-case fails.
        - global_teardown(): Will be called after ALL test-cases.
                             Will be called if any execution before fails.

    :file: setup.pytest

    :author:
        - M. Shan Ur Rehman <Muhammad.Shan.ur.Rehman@continental-corporation.com>
"""


# standard Python import area


# ConTest or custom import area
# NOTE : ALWAYS IMPORT (contest_expects, contest_asserts and global_params) AS BELOW.
#        FOR PROPER ERROR REPORTING AND PARAMETER CONTROL
from contest_verify.verify import contest_asserts
from contest_verify.verify import contest_expects
from ptf.ptf_utils.global_params import *
from ptf.tools_utils.picoscope.pico_3000a import pico_3000a


PS3000A_DLL_PATH = "C:\\Program Files (x86)\\Pico Technology\\PicoScope6\\ps3000a.dll"


def global_setup():
    """
    This method will be called before ALL test-cases are executed.

    You can set global variables with :func:`set_global_parameter`.
    Will skip execution of tests if this method fails.
    """
    # creating object of ps3000a device
    pico_app = pico_3000a.Pico3000A(PS3000A_DLL_PATH)

    # assigning object to a global variable to be accessed later
    set_global_parameter("pico_app", pico_app)


def global_teardown():
    """
    This method will be called after ALL test-cases are executed.

    You can access global variables with :func:`get_parameter`.
    Guaranteed to be called, even if any test or global setup fails.
    """
    pico_app = get_parameter("pico_app")
    pico_app.close()


def setup():
    """
    This method will be called before EACH test-case is executed.

    You can set global variables with :func:`set_global_parameter` and local variables just
    available for the next test-case using :func:`set_local_parameter`.

    You can access global variables with :func:`get_parameter`.

    Will skip execution of test if this method fails.
    Skipped if global setup fails.
    """
    pass


def teardown():
    """
    This method will be called after EACH testcase is executed.

    You can access global variables with :func:`get_parameter`.

    Guaranteed to be called, even if the test or setup fails.
    Skipped if global setup fails.
    """
    pass
