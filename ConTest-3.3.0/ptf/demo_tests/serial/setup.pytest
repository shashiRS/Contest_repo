"""
    Copyright 2019 Continental Corporation

    This file contains up to four methods that will be called by the test framework:
        - global_setup(): Will be called before ALL test-cases
        - setup(): Will be called before EACH test-case
        - teardown(): Will be called after EACH test-case. Will also be called if test-case fails.
        - global_teardown(): Will be called after ALL test-cases.
                             Will be called if any execution before fails.

    :file: setup.pytest

    :author:
        - M. Shan Ur Rehman <Muhammad.Shan.ur.Rehman@continental-corporation.com>
"""


# standard Python import area


# ConTest or custom import area
# NOTE : ALWAYS IMPORT (contest_expects, contest_asserts and global_params) AS BELOW.
#        FOR PROPER ERROR REPORTING AND PARAMETER CONTROL
from contest_verify.verify import contest_asserts
from contest_verify.verify import contest_expects
from ptf.ptf_utils.global_params import *
from ptf.tools_utils.serial_util import serial_util


def global_setup():
    """
    This method will be called before ALL test-cases are executed.

    You can set global variables with :func:`set_global_parameter`.
    Will skip execution of tests if this method fails.
    """
    # creating an object of serial utility, opening port COM4
    serial_app = serial_util.SerialComm(port="COM4")
    # creating a global parameter and assigning serial utility object to it
    set_global_parameter("serial_app", serial_app)

def global_teardown():
    """
    This method will be called after ALL test-cases are executed.

    You can access global variables with :func:`get_parameter`.
    Guaranteed to be called, even if any test or global setup fails.
    """
    # NOTE: This test case is written for Power Supply (SSP 240-40). Make sure you have connected
    #       COM4 port to this device
    # grabbing serial utility object
    serial_app = get_parameter("serial_app")
    # closing the serial port opened in 'global_setup'
    serial_app.close()

def setup():
    """
    This method will be called before EACH test-case is executed.

    You can set global variables with :func:`set_global_parameter` and local variables just
    available for the next test-case using :func:`set_local_parameter`.

    You can access global variables with :func:`get_parameter`.

    Will skip execution of test if this method fails.
    Skipped if global setup fails.
    """
    pass

def teardown():
    """
    This method will be called after EACH testcase is executed.

    You can access global variables with :func:`get_parameter`.

    Guaranteed to be called, even if the test or setup fails.
    Skipped if global setup fails.
    """
    pass

