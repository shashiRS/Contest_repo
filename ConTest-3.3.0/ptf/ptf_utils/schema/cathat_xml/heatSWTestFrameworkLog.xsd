<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!-- Revision: 0.5 -->
	<!--
	Reasons for change: 
	- need of addition of code coverage information
	- review comments
	Changes:
	1) Add new codeCoverage element as child of testrun element 
	2) Remove codeCoverage element from testsuite element
	3) Fix small typos
-->
<!-- Revision: 0.4 -->
	<!--
	Reasons for change: 
	- issues found during tool development due to incomplete descriptions
	- review comments
	
	Changes:
	1) Description and data type creation for elements: testBases,  testEnvironments, testData, testObjects, testPlans
	2) Formating fix of the textual descriptions in the documentation
	3) Added an optional element named note in test case result which can describe the reason of the verdict
	4) Added an optional attribute to testcase step named cathegory with possible values setup, execution and teardown to see what part of test execution the step belongs to
	5) Order in testsuites matter, properties shall be the first one
	6) The properties (if applicable) shall be the first element in testrun, testsuite, testcase
	7) The element docInfo is now described in detail
	8) Add possibility to have link from each testcase result (element additionalExternalInfo) to additional info (e.g. detailed log) 
	9) The element projectInfo become optional
	
-->
<!-- Revision: 0.3 -->
<!-- Reasons for change: addaptations for Jazz/HEP and increase the clarity 
	(make files more self explained) 
	Changes: 
	1) the name attribute is required 
	on: testsuites, testSuiteResult 
	2) renamed to testSuiteResult on testsuiteResult 
	3) the timestamp attribute was renamed to timestampStart 
	4) on testcaseResult there is also a timestampStart element 
	5) testTechnique was renamed to testDesignTechnique 
	6) the element "isDestructive" became optional 
	7) data element in observedStepResults became optional 
	8) observedStepResults in a step became optional 
	9) testSteps element will also have a name and properties 
	10) testcaseAttributes become optional 
	11) testSteps in a testcase became optional 
	12) documentation improvements 
	13) the element docInfo became optional
	14) time and estimated execution time is in seconds (to match JUnit format and Jenkins plugins)
	(https://llg.cubic.org/docs/junit/ , https://github.com/windyroad/JUnit-Schema/blob/master/JUnit.xsd )
	-->

<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema"
	attributeFormDefault="unqualified" elementFormDefault="qualified">

	<xs:complexType name="property">
		<xs:attribute name="name" type="xs:string" use="required" />
		<xs:attribute name="value" type="xs:string" use="required" />
	</xs:complexType>

	<xs:complexType name="properties">
		<xs:annotation>
			<xs:documentation xml:lang="en">
	Properties can hold special named elements with values.
	When using with HEP it can be used to support custom fields.
			</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="property" type="property" maxOccurs="unbounded" />
		</xs:sequence>
	</xs:complexType>

	<xs:complexType name="projectInfo">
		<xs:annotation>
			<xs:documentation xml:lang="en"> 
	Info on the project: name and accounts.
			</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="account" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation xml:lang="en">
	Accounts to uniquely identify the project by special IDs like the DG or DS account.
					</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:attribute name="type" type="xs:string">
					</xs:attribute>
					<xs:attribute name="value" type="xs:string" />
				</xs:complexType>
			</xs:element>
		</xs:sequence>
		<xs:attribute name="name" type="xs:string" />
	</xs:complexType>

	<xs:complexType name="configManagementRepositories">
		<xs:annotation>
			<xs:documentation xml:lang="en"> 
	To avoid repeating for different documents or files where the storage is
	here the repositories can be mentioned once and refer it in this XML from other places by name.
	Configuration management tool can be any tool in which data is stored.
			</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="repo" minOccurs="1" maxOccurs="unbounded">
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="xs:string">
							<xs:attribute name="id" type="xs:string" />
							<xs:attribute name="tool" type="xs:string" />
							<xs:attribute name="baseRevision" type="xs:string" />
							<xs:attribute name="tag" type="xs:string" />
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
		<xs:attribute name="name" type="xs:string" />
	</xs:complexType>

	<xs:simpleType name="verdictValues">
		<xs:annotation>
			<xs:documentation xml:lang="en"> 
	Values for test results,test step results or suite results.
			</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="error">
				<xs:annotation>
					<xs:documentation xml:lang="en"> 
	The test cannot be started or completed due to some error.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="failed">
				<xs:annotation>
					<xs:documentation xml:lang="en"> 
	The test completed but failed.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="skipped"> <!-- deferred -->
				<xs:annotation>
					<xs:documentation xml:lang="en"> 
	The test was not selected for execution.
	Possible reasons, the test is: 
		- for different variant, 
		- for a higher test intensity,
		- not part of regression strategy, etc.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="passed">
				<xs:annotation>
					<xs:documentation xml:lang="en"> 
	The test completed and passed.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>

	<xs:complexType name="note">
		<xs:annotation>
			<xs:documentation xml:lang="en">
    A note telling details on the reason for the result (of a testcase) especially useful for error or skipped tests.
			</xs:documentation>
		</xs:annotation>
		
		<xs:simpleContent>
			<xs:extension base="xs:string">
			</xs:extension>
		</xs:simpleContent>
	</xs:complexType>

	<xs:complexType name="testcaseResult">
		<xs:annotation>
			<xs:documentation xml:lang="en"> 
	The test result is not limited to the verdict (passed, failed or other) status.
	The test result includes other info like when it was performed and important other data recorded.
			</xs:documentation>
		</xs:annotation>
		
		<xs:sequence>
			<xs:element name="properties" type="properties" minOccurs="0" />
			<xs:element name="additionalExternalInfo" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation xml:lang="en"> 
	Additional info on an external location (e.g. log file).
				</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="description" type="xs:string"/>
						<xs:element name="URL" type="xs:string"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="note" type="note" minOccurs="0" />
		</xs:sequence>
		<xs:attribute name="timestampStart" type="xs:dateTime"
			use="required">
			<xs:annotation>
				<xs:documentation xml:lang="en">
	Moment when the test was started. Timezone may not be specified but highly recommended.
				</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="duration" type="xs:decimal">
			<xs:annotation>
				<xs:documentation xml:lang="en">
	Actual execution time in seconds.
				</xs:documentation>
			</xs:annotation>
		</xs:attribute>

		<xs:attribute name="verdict" type="verdictValues"></xs:attribute>

	</xs:complexType>

	<xs:complexType name="testcaseAttributes">
		<xs:sequence>
			<xs:element name="testLevel" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en"> 
	Test level to which the test belongs to, e.g. SW Unit, SW Integration, SW Qualification. 
	Exact values to be standardized later.
					</xs:documentation>
				</xs:annotation>
					<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:enumeration value="SW-unit"></xs:enumeration>
						<xs:enumeration value="SW-integration"></xs:enumeration>
						<xs:enumeration value="SW-qualification"></xs:enumeration>
						<xs:enumeration value="SY-integration"></xs:enumeration>
						<xs:enumeration value="SY-qualification"></xs:enumeration>
						<xs:enumeration value=""></xs:enumeration>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="testDesignTechnique" type="xs:string"
				minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en"> 
	Test technique used to derive the test from the test basis, e.g. Boundary Values Analysis, Equivalence classes, etc.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="isRegression" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">
	Shall the test case be re-run in case of no changes in the test basis (or test object). 
	It is to check if there are side effects on other changes or the tools fail to identify a change.
					</xs:documentation>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:enumeration value="yes"></xs:enumeration>
						<xs:enumeration value="no"></xs:enumeration>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="isDestructive" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en"> 
	Can the test destroy the test object (e.g. crash test, short circuit test, etc.)
	Such tests shall be executed only at the end of test sessions, or if there are enough test objects (not prototypes) available.
					</xs:documentation>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:enumeration value="yes"></xs:enumeration>
						<xs:enumeration value="no"></xs:enumeration>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="priority" type="xs:int">
				<xs:annotation>
					<xs:documentation xml:lang="en">
	It is about the order of the execution of the test cases. Values: 
		1 - execute before others, 
		2 - execute after prio 1 but before others, etc.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="estimatedExecutionTime" type="xs:decimal">
				<xs:annotation>
					<xs:documentation xml:lang="en">
	Estimated execution time in seconds.
	This can be used as a criteria for test selection for execution when the execution time is critycal 
	(e.g. gate to accept or not a change or commit)
					</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>

	<xs:complexType name="observedStepResults">
		<xs:annotation>
			<xs:documentation xml:lang="en">
	For each step we can have a verdict (passed/failed/other), some data (variables or other measured values) we can save and text from the console.
			</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="data" minOccurs="0" maxOccurs="unbounded">
				<xs:complexType>
					<xs:attribute name="name" type="xs:string" use="optional"></xs:attribute>
					<xs:attribute name="value" type="xs:string" use="optional"></xs:attribute>
				</xs:complexType>
			</xs:element>
			<xs:element name="system-out" type="xs:string" minOccurs="0"></xs:element>
			<xs:element name="system-err" type="xs:string" minOccurs="0"></xs:element>
		</xs:sequence>
		<xs:attribute name="verdict" type="verdictValues">
		</xs:attribute>
		<xs:attribute name="timestampStart" type="xs:dateTime"
			use="optional"></xs:attribute> <!-- smaller resolution than seconds can make sense to synch with different 
			traces -->
		<xs:attribute name="timestampEnd" type="xs:dateTime" use="optional"></xs:attribute>
	</xs:complexType>

	<xs:complexType name="step">
		<xs:sequence>
			<xs:element name="description" type="xs:string">
			</xs:element>
			<xs:element name="expectedResults" type="xs:string"
				minOccurs="0">
			</xs:element>
			<xs:element name="observedResults" type="observedStepResults"
				minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">
	The observed result can be available only after the execution (log).
					</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
		<xs:attribute name="id" type="xs:string">
			<xs:annotation>
				<xs:documentation xml:lang="en">
	The id must be an unique ID of the step or a number.
	In case of HEP interface this can be the ID of the step in the tool.
				</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="category"  use="optional">
			<xs:annotation>
				<xs:documentation xml:lang="en">
	The kind of the test step: setup step, execution step, teardown step.
				</xs:documentation>
			</xs:annotation>
			<xs:simpleType>
			<xs:restriction base="xs:string">
				<xs:enumeration value="setup">
					<xs:annotation>
						<xs:documentation xml:lang="en"> 
	A setup step of the test case.
						</xs:documentation>
					</xs:annotation>
				</xs:enumeration>
				<xs:enumeration value="execution">
					<xs:annotation>
						<xs:documentation xml:lang="en"> 
	An execution step of the test case.
						</xs:documentation>
					</xs:annotation>
				</xs:enumeration>
				<xs:enumeration value="teardown">
					<xs:annotation>
						<xs:documentation xml:lang="en"> 
	A teardown step of the test case.
						</xs:documentation>
					</xs:annotation>
				</xs:enumeration>
		</xs:restriction>
		</xs:simpleType>
		</xs:attribute>
	</xs:complexType>

	<xs:complexType name="testSteps">
		<xs:sequence>
			<xs:element name="step" type="step" maxOccurs="unbounded" />
			<xs:element name="properties" type="properties" minOccurs="0" />
		</xs:sequence>
		<xs:attribute name="name" type="xs:string"></xs:attribute>
	</xs:complexType>

	<xs:complexType name="testcase">
		<xs:sequence>
			<xs:element name="properties" type="properties" minOccurs="0" />
			<xs:element name="originalLocationURL" type="xs:string" minOccurs="0" />
			<xs:element name="testcaseResult" type="testcaseResult"
				minOccurs="0"></xs:element>
			<xs:element name="attributes" type="testcaseAttributes"
				minOccurs="0"></xs:element>
			
			<xs:element name="traceability" minOccurs="0" maxOccurs="unbounded">
				<xs:complexType>
					<xs:sequence>
						 <xs:element name="URLs" minOccurs="0">
                                        <xs:complexType>
                                          <xs:simpleContent>
                                            <xs:extension base="xs:string">
                                              <xs:attribute name="linkTypeIdentifier" type="xs:string" use="optional" />
                                            </xs:extension>
                                          </xs:simpleContent>
                                        </xs:complexType>
                                      </xs:element>
					</xs:sequence>
					<xs:attribute name="id" type="xs:string"></xs:attribute>
				</xs:complexType>
			</xs:element>
			<xs:element name="description" type="xs:string" />
			<xs:element name="testSteps" type="testSteps" minOccurs="0" maxOccurs="unbounded" />
		</xs:sequence>
		<xs:attribute name="classname" type="xs:string"></xs:attribute>
		<xs:attribute name="name" type="xs:string"></xs:attribute>
	</xs:complexType>

	<xs:complexType name="references">
		<xs:sequence>
			<xs:element name="testBaseRef"></xs:element>
			<xs:element name="testObjectRef"></xs:element>
			<xs:element name="testPlanRef"></xs:element>
			<xs:element name="testEnvironmentRef"></xs:element>
			<xs:element name="testDataRef" minOccurs="0"></xs:element>
		</xs:sequence>
	</xs:complexType>

	<xs:complexType name="testsuiteResult">
		<xs:sequence>
			<xs:element name="properties" type="properties" minOccurs="0" />
			<xs:element name="buildJobUrl" type="xs:string" minOccurs="0" />
			<xs:element name="buildJobName" type="xs:string" minOccurs="0" />
			<xs:element name="buildJobNumber" type="xs:string" minOccurs="0" />
			
		</xs:sequence>

		<xs:attribute name="timestampStart" type="xs:dateTime"
			use="required">
			<xs:annotation>
				<xs:documentation xml:lang="en">
	Moment when the test was executed. 
	Timezone may not be specified.
				</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="hostname" use="required">
			<xs:annotation>
				<xs:documentation xml:lang="en">
	Host on which the tests were executed. 'localhost' should be used if the hostname cannot be determined.
				</xs:documentation>
			</xs:annotation>
			<xs:simpleType>
				<xs:restriction base="xs:token">
					<xs:minLength value="1" />
				</xs:restriction>
			</xs:simpleType>
		</xs:attribute>
		<xs:attribute name="tests" type="xs:int" use="required">
			<xs:annotation>
				<xs:documentation xml:lang="en">
	The total number of tests in the suite.
				</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="failures" type="xs:int" use="required">
			<xs:annotation>
				<xs:documentation xml:lang="en">
	The total number of tests in the suite that failed. 
				</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="errors" type="xs:int" use="required">
			<xs:annotation>
				<xs:documentation xml:lang="en">
	The total number of tests in the suite that had an unaticipated problem and cannot be fully executed.
				</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="skipped" type="xs:int" use="required">
			<xs:annotation>
				<xs:documentation xml:lang="en">
	The total number of skipped tests in the suite (not selected for execution).
				</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="duration" type="xs:decimal" use="required">
			<xs:annotation>
				<xs:documentation xml:lang="en">
	Time taken (in seconds) to execute the tests in the suite.
				</xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:complexType>


	<xs:complexType name="testsuite">
		<xs:sequence>
		    <xs:element name="properties" type="properties" minOccurs="0" />
			<xs:element name="references" type="references" minOccurs="0"></xs:element>
			
			<xs:element name="testsuiteResult" type="testsuiteResult"
				minOccurs="0" />
			<xs:element name="testcase" type="testcase" maxOccurs="unbounded"
				minOccurs="0"></xs:element>
			<xs:element name="history" minOccurs="0"></xs:element>
			<xs:element name="glossary" minOccurs="0"></xs:element>
		</xs:sequence>
		<xs:attribute name="name" use="optional">
			<xs:annotation>
				<xs:documentation xml:lang="en">
	Full class name of the test for non-aggregated testsuite documents. 
	Class name without the package for aggregated testsuites documents.
				</xs:documentation>
			</xs:annotation>
			<xs:simpleType>
				<xs:restriction base="xs:token">
					<xs:minLength value="1" />
				</xs:restriction>
			</xs:simpleType>
		</xs:attribute>
		<xs:attribute name="tests" type="xs:int" use="required">
			<xs:annotation>
				<xs:documentation xml:lang="en">
	The total number of tests in the suite.
				</xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:complexType>



	<xs:complexType name="testsuites">
		<xs:sequence>
				<xs:element name="properties" type="properties" minOccurs="0" />
				<xs:element name="testsuite" type="testsuite" maxOccurs="unbounded"/>
		</xs:sequence>
		<xs:attribute name="name" use="required" type="xs:token" />
	</xs:complexType>
	

	<xs:complexType name="TestEnvironments">
		<xs:annotation>
			<xs:documentation xml:lang="en">
    Container which can hold different test environments identified by name (see attribute name).
	The environment can be refferenced by a suite. By this the repetition of the details of the environment is avoided.
			</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="testEnvironmentGroup" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation xml:lang="en">
    A test environment (e.g. simulation or testbench) is in general consisting on multiple SW and HW elements which can be described here.
	Instead of a detailed description we can have also a reference to another document (e.g. test environment readyness report).
	The PC on which the tests were run can also be part of this textual field.
	Detailed description can also include:
	- SW tool names and versions 
	- HW equipment names and serial numbers
	- Simulations (e.g. CANoe) names and versions
	- Wireing descriptions
	- etc.
					</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:simpleContent> <!-- for the moment it can be any free text -->
						<xs:extension base="xs:string">
							<xs:attribute name="name" use="required" type="xs:token" />
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>

	<xs:complexType name="testBases">
		<xs:annotation>
			<xs:documentation xml:lang="en">
    Container which can hold different test bases.
	Actually these are documents like Requirements, Architecture, Design, change requests, bug reports, etc. which describe the correct funtionality.
	This part will be standardized later.
			</xs:documentation>
		</xs:annotation>
		<xs:simpleContent> <!-- for the moment it can be any free text -->
			<xs:extension base="xs:string"/>
		</xs:simpleContent>
	</xs:complexType>

	<xs:complexType name="testData">
		<xs:annotation>
			<xs:documentation xml:lang="en">
    Container which can hold different data sources or references to external data files used for testing.
	These elements can be just referenced from the suites avoiding data duplication in the same XML file.
	This part will be standardized later.
			</xs:documentation>
		</xs:annotation>
		<xs:simpleContent> <!-- for the moment it can be any free text -->
			<xs:extension base="xs:string"/>
		</xs:simpleContent>
	</xs:complexType>

	<xs:complexType name="testObjects">
		<xs:annotation>
			<xs:documentation xml:lang="en">
    Container which can hold different informational elements about files which are subject of the testing.
	These elements can be just referenced from the suites avoiding data duplication in the same XML file.
	This part will be standardized later.
			</xs:documentation>
		</xs:annotation>
		<xs:simpleContent> <!-- for the moment it can be any free text -->
			<xs:extension base="xs:string"/>
		</xs:simpleContent>
	</xs:complexType>

	<xs:complexType name="testPlans">
		<xs:annotation>
			<xs:documentation xml:lang="en">
	Container which can hold different informational elements about test plans.
	These elements can be just referenced from the suites avoiding data duplication in the same XML file.
	This part will be standardized later.
			</xs:documentation>
		</xs:annotation>
		<xs:simpleContent> <!-- for the moment it can be any free text -->
			<xs:extension base="xs:string"/>
		</xs:simpleContent>
	</xs:complexType>

	<xs:complexType name="docInfo">
		<xs:annotation>
			<xs:documentation xml:lang="en">
			
			</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="properties" type="properties" minOccurs="0" />
			<xs:element name="overview">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="origin" type="xs:string">
							<xs:annotation>
								<xs:documentation xml:lang="en">
	Which tool created this file and in what context.		
								</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="title" type="xs:string">
							<xs:annotation>
								<xs:documentation xml:lang="en">
	The title of the document.		
								</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="revisionLabel" type="xs:string">
							<xs:annotation>
								<xs:documentation xml:lang="en">
	The version or a specific label of the document.		
								</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="createdAt" type="xs:string">
							<xs:annotation>
								<xs:documentation xml:lang="en">
	When was the document created including date ane time.		
								</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="docStatus" type="xs:string">
							<xs:annotation>
								<xs:documentation xml:lang="en">
	Maturity level of the document, values like: draft,reviewed,corrected,final.		
								</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="organization" type="xs:string">
							<xs:annotation>
								<xs:documentation xml:lang="en">
	Issuing organization of the document. Can include company name, project name and team.		
								</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="creationResponsible" type="xs:string">
							<xs:annotation>
								<xs:documentation xml:lang="en">
	Name of the person responsible for the creation of the document. (e.g. Tester).	
								</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="approver" type="xs:string" maxOccurs="unbounded">
							<xs:annotation>
								<xs:documentation xml:lang="en">
	Name of person who approved this document. This element can occur multiple times if there are multiple approvers.
								</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="history" type="xs:string">
							<xs:annotation>
								<xs:documentation xml:lang="en">
	Text describing the history of this document.
								</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="scope" type="xs:string">
				<xs:annotation>
					<xs:documentation xml:lang="en">
	Scope: in scope, out of scope, asumptions, limitations.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>

	<xs:complexType name="codeCoverageJustification">
		<xs:annotation>
			<xs:documentation xml:lang="en">
				Element that holds a code coverage justification.
			</xs:documentation>
		</xs:annotation>
		<xs:attribute name="reason" type="xs:string" >
			<xs:annotation>
				<xs:documentation xml:lang="en">
					Reason for which the code coverage is justified.
				</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="lineStart" type="xs:string" >
			<xs:annotation>
				<xs:documentation xml:lang="en">
					Line number where the justification of the code coverage starts.
				</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="lineEnd" type="xs:string" >
			<xs:annotation>
				<xs:documentation xml:lang="en">
					Line number where the justification of the code coverage ends.
				</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="fileName" type="xs:string" >
			<xs:annotation>
				<xs:documentation xml:lang="en">
					File name where the justification is actually present.
				</xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:complexType>

	<xs:complexType name="codeCoverageStat">
		<xs:annotation>
			<xs:documentation xml:lang="en">
				Code coverage statistics. It can be present in the code coverage summary statistics and in a specific test object as well.
				Measured values: 
				- type - instrumentation mode for code coverage analysis (e.g. statement, decision, branch,  etc.)
				- tool - name of the tool used for code coverage analysis (e.g. ctc, gcov etc.)
				- total - total count of the items that should be executed
				- hits - total count of the items that are actually executed
				- justified - total count of the items that are justified
				- percentageHits - percentage of measured code coverage (100*hits/total) expessed with 2 decimal point (e.g. 95.35)
				- percentageWithJustified - percentage of measured and justified code coverage ((100*(hits+justified))/total) count expressed in percentage
				Code covergae planning: 
				- plannedPercent - planned percentage of the code coverage without justifications
				- plannedWithJustified - planned percentage of the code coverage with justifications (main input for K1)
			</xs:documentation>
		</xs:annotation>
		<xs:attribute name="type" type="xs:string" use="required" />
		<xs:attribute name="tool" type="xs:string" />
		<xs:attribute name="total" type="xs:nonNegativeInteger" />
		<xs:attribute name="hits" type="xs:nonNegativeInteger" />
		<xs:attribute name="justified" type="xs:nonNegativeInteger" />
		
		<xs:attribute name="percentageHits" type="xs:decimal" />
		<xs:attribute name="percentageWithJustified" type="xs:decimal" />
		
		<xs:attribute name="plannedPercent" type="xs:decimal" />
		<xs:attribute name="plannedWithJustified" type="xs:decimal" />
	</xs:complexType>
	
	<xs:complexType name="codeCoverageSummary">
		<xs:annotation>
			<xs:documentation xml:lang="en">
				Summary of the code coverage statistics on the project level.
			</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="codeCoverageStat" type="codeCoverageStat" minOccurs="0" maxOccurs="unbounded" />
			<xs:element name="detailsURL" type="xs:string" minOccurs="0" />
		</xs:sequence>
	</xs:complexType>

	<xs:complexType name="codeCoverageObject">
		<xs:annotation>
			<xs:documentation xml:lang="en">
				Code coverage statistics available for a specific tested object.
			</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="testObjectRef" type="xs:string" minOccurs="0" >
				<xs:annotation>
					<xs:documentation xml:lang="en">
						Container that can hold the reference to the tested object.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="detailsURL" type="xs:string" minOccurs="0" >
				<xs:annotation>
					<xs:documentation xml:lang="en">
						Container that can hold URL(s) useful for more details with regards to code coverage (e.g. CTC generated HTML on Jenkins).
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="codeCoverageStat" type="codeCoverageStat" minOccurs="0" maxOccurs="unbounded" />
			<xs:element name="codeCoverageJustification" type="codeCoverageJustification" minOccurs="0" maxOccurs="unbounded" />
		</xs:sequence>
		<xs:attribute name="type" type="xs:string">
			<xs:annotation>
				<xs:documentation xml:lang="en">
					Type of the tested object for which the code coverage instrumentation is done (e.g. component, file, function etc.)
				</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="name" type="xs:string" >
			<xs:annotation>
				<xs:documentation xml:lang="en">
					Name of the tested object:
					- i.e. type attribute is component then name attribute could hold the component directory path name
				e.g.  <!-- <codeCoverageObject type="component" name="folderX/folderY/" asil="C" /> -->
					- i.e. type attribute is file then name attribute could hold the file path name
				e.g.  <!-- <codeCoverageObject type="file" name="folderX/folderY/FileUnderTest.c" /> -->
					- i.e. type attribute is function then name attribute could hold the file path name + hashtag + function name
				e.g. <!-- <codeCoverageObject type="function" name="folderX/folderY/FileUnderTest.c#testedFunction" /> -->
				</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="asil" type="xs:string" >
			<xs:annotation>
				<xs:documentation xml:lang="en">
					ASIL (Automotive Safety Integrity Level) level requested (e.g. A, B, C or D)
				</xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:complexType>
	
	<xs:complexType name="codeCoverage">
		<xs:annotation>
			<xs:documentation xml:lang="en">
				Code coverage information of the project. 
				Can contain a summary of the code coverage on the project level as well as code coverage information on a specific level (e.g. file, component, function).
			</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="codeCoverageSummary" type="codeCoverageSummary" minOccurs="0" />
			<xs:element name="codeCoverageObject" type="codeCoverageObject" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>

	<xs:complexType name="testrun">
		<xs:sequence>
			<xs:element name="properties" type="properties" minOccurs="0" />
			<xs:element name="docInfo"  type="docInfo" minOccurs="0" />
			<xs:element name="testsuites" type="testsuites" maxOccurs="unbounded" minOccurs="0" />
			<xs:element name="codeCoverage"  type="codeCoverage" minOccurs="0" />
		</xs:sequence>
	</xs:complexType>


	<xs:element name="catHat">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="projectInfo" type="projectInfo" minOccurs="0" />
				<xs:element name="configManagementRepositories" type="configManagementRepositories"
					minOccurs="0"></xs:element>
				<xs:element name="testBases" type="testBases" minOccurs="0"></xs:element>
				<xs:element name="testEnvironments" type="TestEnvironments" minOccurs="0"></xs:element>
				<xs:element name="testData" type="testData" minOccurs="0"></xs:element>
				<xs:element name="testObjects" minOccurs="0"></xs:element>
				<xs:element name="testPlans" minOccurs="0"></xs:element>
				<xs:element name="testrun" type="testrun" minOccurs="0"></xs:element>
			</xs:sequence>
		</xs:complexType>
	</xs:element>

</xs:schema>
